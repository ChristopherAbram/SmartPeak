version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  build_ubuntu_1:
    docker:
      - image: ubuntu:20.04
    working_directory: ~/SmartPeak
    steps:
      - checkout
      - run: |
          echo ${CIRCLE_WORKFLOW_ID}
          apt-get update
          apt-get install curl -y
          curl https://docs.readthedocs.io/en/stable/versions.html > tmpfile1
          cp tmpfile1 /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  build_ubuntu_2:
    docker:
      - image: ubuntu:20.04
    working_directory: ~/SmartPeak
    steps:
      - checkout
      - run: |
          echo ${CIRCLE_WORKFLOW_ID}
          apt-get update
          apt-get install curl -y
          curl https://docs.readthedocs.io/en/stable/versions.html > tmpfile2
          cp tmpfile2 /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  publish_release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=${CIRCLE_TAG}
            mkdir arts

            # Get all job numbers for this workflow:
            JOB_NUMBERS_CONTENT=$(curl --request GET \
              --url "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/job" \
              --header "Circle-Token: ${CIRCLE_TOKEN}" \
              --header 'content-type: application/json')
            JOB_NUMBERS=$(echo $JOB_NUMBERS_CONTENT | jq -r '.items[] | select (.type? == "build") | .job_number')
            echo $JOB_NUMBERS | tr " " "\n" > job_num.txt
            echo "Found job IDs in current workflow"
            cat job_num.txt

            # Get artifacts per each job:
            echo "Current job: ${CIRCLE_BUILD_NUM}"
            echo "Searching for Artifacts .........."
            for x in $JOB_NUMBERS ; do 
              if [[ "$x" == "$CIRCLE_BUILD_NUM" ]]; then
                continue
              fi
              ART_CONTENT=$(curl --request GET \
                --url "https://circleci.com/api/v2/project/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/$x/artifacts" \
                --header "Circle-Token: ${CIRCLE_TOKEN}" \
                --header 'content-type: application/json') 
              echo $ART_CONTENT
              echo 
              ARTS=$(echo $ART_CONTENT | jq -r '.items[] | .url')
              echo "*** Artifacts For Job Number $x ***"
              echo $ARTS
              wget -P arts --verbose --header "Circle-Token: ${CIRCLE_TOKEN}" $ARTS
              echo 
            done

            echo "Push artifacts to github tag"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} arts

workflows:
  version: 2.1
  build:
    jobs:
      - build_ubuntu_1:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build_ubuntu_2:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - publish_release:
          requires:
            - build_ubuntu_1
            - build_ubuntu_2
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/